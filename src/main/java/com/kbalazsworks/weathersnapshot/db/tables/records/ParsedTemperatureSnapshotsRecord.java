/*
 * This file is generated by jOOQ.
 */
package com.kbalazsworks.weathersnapshot.db.tables.records;


import com.kbalazsworks.weathersnapshot.db.tables.ParsedTemperatureSnapshots;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ParsedTemperatureSnapshotsRecord extends UpdatableRecordImpl<ParsedTemperatureSnapshotsRecord> implements Record5<Long, Long, LocalDateTime, Integer, Integer> {

    private static final long serialVersionUID = 767337333;

    /**
     * Setter for <code>public.parsed_temperature_snapshots.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.parsed_temperature_snapshots.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.parsed_temperature_snapshots.html_logs_id</code>.
     */
    public void setHtmlLogsId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.parsed_temperature_snapshots.html_logs_id</code>.
     */
    public Long getHtmlLogsId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>public.parsed_temperature_snapshots.temperature_time</code>.
     */
    public void setTemperatureTime(LocalDateTime value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.parsed_temperature_snapshots.temperature_time</code>.
     */
    public LocalDateTime getTemperatureTime() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for <code>public.parsed_temperature_snapshots.temperature_min</code>.
     */
    public void setTemperatureMin(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.parsed_temperature_snapshots.temperature_min</code>.
     */
    public Integer getTemperatureMin() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>public.parsed_temperature_snapshots.temperature_max</code>.
     */
    public void setTemperatureMax(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.parsed_temperature_snapshots.temperature_max</code>.
     */
    public Integer getTemperatureMax() {
        return (Integer) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Long, Long, LocalDateTime, Integer, Integer> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Long, Long, LocalDateTime, Integer, Integer> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return ParsedTemperatureSnapshots.PARSED_TEMPERATURE_SNAPSHOTS.ID;
    }

    @Override
    public Field<Long> field2() {
        return ParsedTemperatureSnapshots.PARSED_TEMPERATURE_SNAPSHOTS.HTML_LOGS_ID;
    }

    @Override
    public Field<LocalDateTime> field3() {
        return ParsedTemperatureSnapshots.PARSED_TEMPERATURE_SNAPSHOTS.TEMPERATURE_TIME;
    }

    @Override
    public Field<Integer> field4() {
        return ParsedTemperatureSnapshots.PARSED_TEMPERATURE_SNAPSHOTS.TEMPERATURE_MIN;
    }

    @Override
    public Field<Integer> field5() {
        return ParsedTemperatureSnapshots.PARSED_TEMPERATURE_SNAPSHOTS.TEMPERATURE_MAX;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getHtmlLogsId();
    }

    @Override
    public LocalDateTime component3() {
        return getTemperatureTime();
    }

    @Override
    public Integer component4() {
        return getTemperatureMin();
    }

    @Override
    public Integer component5() {
        return getTemperatureMax();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getHtmlLogsId();
    }

    @Override
    public LocalDateTime value3() {
        return getTemperatureTime();
    }

    @Override
    public Integer value4() {
        return getTemperatureMin();
    }

    @Override
    public Integer value5() {
        return getTemperatureMax();
    }

    @Override
    public ParsedTemperatureSnapshotsRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public ParsedTemperatureSnapshotsRecord value2(Long value) {
        setHtmlLogsId(value);
        return this;
    }

    @Override
    public ParsedTemperatureSnapshotsRecord value3(LocalDateTime value) {
        setTemperatureTime(value);
        return this;
    }

    @Override
    public ParsedTemperatureSnapshotsRecord value4(Integer value) {
        setTemperatureMin(value);
        return this;
    }

    @Override
    public ParsedTemperatureSnapshotsRecord value5(Integer value) {
        setTemperatureMax(value);
        return this;
    }

    @Override
    public ParsedTemperatureSnapshotsRecord values(Long value1, Long value2, LocalDateTime value3, Integer value4, Integer value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ParsedTemperatureSnapshotsRecord
     */
    public ParsedTemperatureSnapshotsRecord() {
        super(ParsedTemperatureSnapshots.PARSED_TEMPERATURE_SNAPSHOTS);
    }

    /**
     * Create a detached, initialised ParsedTemperatureSnapshotsRecord
     */
    public ParsedTemperatureSnapshotsRecord(Long id, Long htmlLogsId, LocalDateTime temperatureTime, Integer temperatureMin, Integer temperatureMax) {
        super(ParsedTemperatureSnapshots.PARSED_TEMPERATURE_SNAPSHOTS);

        set(0, id);
        set(1, htmlLogsId);
        set(2, temperatureTime);
        set(3, temperatureMin);
        set(4, temperatureMax);
    }
}
