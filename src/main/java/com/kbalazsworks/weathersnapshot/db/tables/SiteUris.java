/*
 * This file is generated by jOOQ.
 */
package com.kbalazsworks.weathersnapshot.db.tables;


import com.kbalazsworks.weathersnapshot.db.Keys;
import com.kbalazsworks.weathersnapshot.db.Public;
import com.kbalazsworks.weathersnapshot.db.tables.records.SiteUrisRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.JSON;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row7;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SiteUris extends TableImpl<SiteUrisRecord> {

    private static final long serialVersionUID = 1097915975;

    /**
     * The reference instance of <code>public.site_uris</code>
     */
    public static final SiteUris SITE_URIS = new SiteUris();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SiteUrisRecord> getRecordType() {
        return SiteUrisRecord.class;
    }

    /**
     * The column <code>public.site_uris.id</code>.
     */
    public final TableField<SiteUrisRecord, Integer> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('site_uris_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.site_uris.site_id</code>.
     */
    public final TableField<SiteUrisRecord, Integer> SITE_ID = createField(DSL.name("site_id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.site_uris.site_uri_id</code>.
     */
    public final TableField<SiteUrisRecord, Integer> SITE_URI_ID = createField(DSL.name("site_uri_id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.site_uris.latest_parser_version_id</code>.
     */
    public final TableField<SiteUrisRecord, Integer> LATEST_PARSER_VERSION_ID = createField(DSL.name("latest_parser_version_id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.site_uris.method</code>.
     */
    public final TableField<SiteUrisRecord, Integer> METHOD = createField(DSL.name("method"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.site_uris.uri</code>.
     */
    public final TableField<SiteUrisRecord, String> URI = createField(DSL.name("uri"), org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>public.site_uris.params</code>.
     */
    public final TableField<SiteUrisRecord, JSON> PARAMS = createField(DSL.name("params"), org.jooq.impl.SQLDataType.JSON, this, "");

    /**
     * Create a <code>public.site_uris</code> table reference
     */
    public SiteUris() {
        this(DSL.name("site_uris"), null);
    }

    /**
     * Create an aliased <code>public.site_uris</code> table reference
     */
    public SiteUris(String alias) {
        this(DSL.name(alias), SITE_URIS);
    }

    /**
     * Create an aliased <code>public.site_uris</code> table reference
     */
    public SiteUris(Name alias) {
        this(alias, SITE_URIS);
    }

    private SiteUris(Name alias, Table<SiteUrisRecord> aliased) {
        this(alias, aliased, null);
    }

    private SiteUris(Name alias, Table<SiteUrisRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> SiteUris(Table<O> child, ForeignKey<O, SiteUrisRecord> key) {
        super(child, key, SITE_URIS);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public Identity<SiteUrisRecord, Integer> getIdentity() {
        return Keys.IDENTITY_SITE_URIS;
    }

    @Override
    public UniqueKey<SiteUrisRecord> getPrimaryKey() {
        return Keys.SITE_URIS_PKEY;
    }

    @Override
    public List<UniqueKey<SiteUrisRecord>> getKeys() {
        return Arrays.<UniqueKey<SiteUrisRecord>>asList(Keys.SITE_URIS_PKEY);
    }

    @Override
    public SiteUris as(String alias) {
        return new SiteUris(DSL.name(alias), this);
    }

    @Override
    public SiteUris as(Name alias) {
        return new SiteUris(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SiteUris rename(String name) {
        return new SiteUris(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public SiteUris rename(Name name) {
        return new SiteUris(name, null);
    }

    // -------------------------------------------------------------------------
    // Row7 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row7<Integer, Integer, Integer, Integer, Integer, String, JSON> fieldsRow() {
        return (Row7) super.fieldsRow();
    }
}
